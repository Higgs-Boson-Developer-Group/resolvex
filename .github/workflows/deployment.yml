name: Deploy to VPS
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Create a deployment record
      - name: Create Deployment
        id: create_deployment
        run: |
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/deployments \
            -d '{
                  "ref": "main",
                  "environment": "production",
                  "description": "Deploying to production",
                  "auto_merge": false,
                  "required_contexts": []
                }')
          DEPLOYMENT_ID=$(echo "$RESPONSE" | jq -r '.id')
          echo "Deployment ID: $DEPLOYMENT_ID"
          echo "::set-output name=deployment_id::$DEPLOYMENT_ID"

      - name: Print Secret Variables (Masked)
        run: |
          echo "VPS_HOST: ${{ secrets.VPS_HOST }}"
          echo "VPS_USER: ${{ secrets.VPS_USER }}"
          echo "VPS_SSH_KEY: [MASKED]"  # Avoid printing the private key

      - name: Deploy app via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: "${{ secrets.VPS_SSH_KEY }}"
          script: |
            cd ~/production/resolveX
            git pull origin main
            npm i
            npm run build
            pm2 restart resolveX

      # After a successful deploy, update the deployment status
      - name: Update Deployment Status to Success
        run: |
          DEPLOYMENT_ID=${{ steps.create_deployment.outputs.deployment_id }}
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses \
            -d '{
                  "state": "success",
                  "description": "Deployment finished successfully",
                  "environment_url": "https://your-production-url.com"
                }'
